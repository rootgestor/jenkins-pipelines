pipeline {
  agent any
  environment {
    REACT_APP_API_BACK = credentials('ROOTGESTOR_BACKOFFICE_API_URL')
    API_KEY = credentials('ROOTGESTOR_BACKOFFICE_API_KEY')
    UPLOADS_CDN_PATH = credentials('UPLOADS_FRONTEND_CDN_PATH')
  }
  stages {
    stage('Install frontend dependencies') {
      parallel {
        stage('Install frontend dependencies') {
          steps {
            sh 'rm -rf backoffice'
            sh 'git clone git@github.com:rootgestor/backoffice.git'
            sh 'cd backoffice && git clone --recurse-submodules git@github.com:rootgestor/isolib.git common/isolib'
            yarn(command: 'install', workspaceSubdirectory: 'backoffice')
          }
        }

        stage('Install backend dependencies') {
          steps {
            sh 'rm -rf backoffice-backend'
            sh 'git clone git@github.com:rootgestor/backoffice-backend.git'
            sh 'cd backoffice-backend && git clone --recurse-submodules git@github.com:rootgestor/backend-common.git common'
            yarn(command: 'install', workspaceSubdirectory: 'backoffice-backend')
          }
        }

      }
    }

    stage('build frontend') {
      steps {
        yarn(command: 'build', workspaceSubdirectory: 'backoffice')
      }
    }

    stage('Publish') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'AWS_KEY_PEM', keyFileVariable: 'AWS_KEY_PEM')]) {
          sh '''
          scp -i $AWS_KEY_PEM backoffice/dist/index.html ubuntu@ec2-3-147-59-32.us-east-2.compute.amazonaws.com:/var/www/html/demo/index.html
          '''
        }
      }
    }

    stage('Clean') {
      steps {
        sh 'rm -rf backoffice'
        sh 'rm -rf backoffice-backend'
      }
    }

  }
}
